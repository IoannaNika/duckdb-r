From 5e2b38d3d16dcc271ae0076bbb7e83f913b62580 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kirill=20M=C3=BCller?= <kirill@cynkra.com>
Date: Sun, 25 May 2025 16:08:40 +0200
Subject: [PATCH] strict aliasing

---
 src/duckdb/extension/parquet/parquet_float16.cpp | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/duckdb/extension/parquet/parquet_float16.cpp b/src/duckdb/extension/parquet/parquet_float16.cpp
index 1694d70d6..066a0b04c 100644
--- a/src/duckdb/extension/parquet/parquet_float16.cpp
+++ b/src/duckdb/extension/parquet/parquet_float16.cpp
@@ -11,7 +11,11 @@ float Float16ToFloat32(const uint16_t &float16_value) {
 	uint32_t sign = float16_value >> 15;
 	uint32_t exponent = (float16_value >> 10) & 0x1F;
 	uint32_t fraction = (float16_value & 0x3FF);
-	uint32_t float32_value;
+	// Avoid strict aliasing issues and compiler warnings
+	uint32_t float32_value = 0;
+	float out;
+	static_assert(sizeof(out) == sizeof(float32_value), "Size of float and uint32_t must match");
+
 	if (exponent == 0) {
 		if (fraction == 0) {
 			// zero
@@ -39,7 +43,8 @@ float Float16ToFloat32(const uint16_t &float16_value) {
 		float32_value = (sign << 31) | ((exponent + (127 - 15)) << 23) | (fraction << 13);
 	}
 
-	return *reinterpret_cast<float *>(&float32_value);
+	memcpy(&out, &float32_value, sizeof(out));
+	return(out);
 }
 
 } // namespace duckdb
-- 
2.48.1

